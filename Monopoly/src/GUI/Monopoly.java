/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Point;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author farfa
 */
public class Monopoly extends javax.swing.JFrame {

    private Tablero tablero;
    private ArrayList<Jugador> jugadores;
    private int indiceJugadorActual;

    /**
     * Creates new form Monopoly
     */
    public Monopoly() {
        initComponents(); // Call initComponents to initialize GUI components

        // Initialize other variables and set up the game
        tablero = new Tablero();
        jugadores = new ArrayList<>();
        indiceJugadorActual = 0;

        int numeroDeJugadores = solicitarNumeroJugadores();
        inicializarJugadores(numeroDeJugadores);

        actualizarRegistroJuego("Juego iniciado con " + jugadores.size() + " jugadores."+ "\n");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelTablero = new javax.swing.JPanel();
        PanelCasilla = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jButton27 = new javax.swing.JButton();
        jButton28 = new javax.swing.JButton();
        jButton29 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jButton32 = new javax.swing.JButton();
        jButton33 = new javax.swing.JButton();
        jButton34 = new javax.swing.JButton();
        jButton35 = new javax.swing.JButton();
        jButton36 = new javax.swing.JButton();
        jButton37 = new javax.swing.JButton();
        jButton38 = new javax.swing.JButton();
        jButton39 = new javax.swing.JButton();
        jButton40 = new javax.swing.JButton();
        Dado = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        RegistroJuego = new javax.swing.JTextArea();
        cmdSAlir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 204));

        PanelTablero.setBackground(new java.awt.Color(213, 193, 168));

        PanelCasilla.setBackground(new java.awt.Color(255, 255, 255));
        PanelCasilla.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(155, 232, 155));
        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton1.setText("Go");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 640, 120, 100));

        jButton2.setBackground(new java.awt.Color(178, 147, 147));
        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton2.setText("Mediterranean Avenue");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 640, 100, 100));

        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton3.setText("Community Chest");
        PanelCasilla.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 640, 100, 100));

        jButton4.setBackground(new java.awt.Color(178, 147, 147));
        jButton4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton4.setText("Baltic Avenue");
        PanelCasilla.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 640, 100, 100));

        jButton5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton5.setText("Income Tax");
        PanelCasilla.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 640, 100, 100));

        jButton6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton6.setText("Reading Railroad");
        PanelCasilla.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 640, 100, 100));

        jButton7.setBackground(new java.awt.Color(78, 162, 204));
        jButton7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton7.setText("Oriental Avenue");
        PanelCasilla.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 640, 100, 100));

        jButton8.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton8.setText("Chance");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 640, 100, 100));

        jButton9.setBackground(new java.awt.Color(78, 162, 204));
        jButton9.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton9.setText("Vermont Avenue");
        PanelCasilla.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 640, 100, 100));

        jButton10.setBackground(new java.awt.Color(78, 162, 204));
        jButton10.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton10.setText("Connecticut Avenue");
        PanelCasilla.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 640, 100, 100));

        jButton11.setBackground(new java.awt.Color(155, 232, 155));
        jButton11.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton11.setText("Jail");
        PanelCasilla.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 640, 120, 100));

        jButton12.setBackground(new java.awt.Color(218, 157, 217));
        jButton12.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton12.setText("St.Charles Place");
        PanelCasilla.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 580, 120, 60));

        jButton13.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton13.setText("Electric Company");
        PanelCasilla.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 520, 120, 60));

        jButton14.setBackground(new java.awt.Color(218, 157, 217));
        jButton14.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton14.setText("States Avenue");
        PanelCasilla.add(jButton14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 460, 120, 60));

        jButton15.setBackground(new java.awt.Color(218, 157, 217));
        jButton15.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton15.setText("Virginia Avenue");
        PanelCasilla.add(jButton15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 120, 60));

        jButton16.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton16.setText("Pennsylvania Railroad");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 340, 120, 60));

        jButton17.setBackground(new java.awt.Color(255, 204, 153));
        jButton17.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton17.setText("St.James Place");
        PanelCasilla.add(jButton17, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 120, 60));

        jButton18.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton18.setText("Community Chest");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 220, 120, 60));

        jButton19.setBackground(new java.awt.Color(255, 204, 153));
        jButton19.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton19.setText("Tennessee Avenue");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 120, 60));

        jButton20.setBackground(new java.awt.Color(255, 204, 153));
        jButton20.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton20.setText("New York Avenue");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton20, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 120, 60));

        jButton21.setBackground(new java.awt.Color(155, 232, 155));
        jButton21.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton21.setText("Free Parking");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 120, 100));

        jButton22.setBackground(new java.awt.Color(255, 153, 153));
        jButton22.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton22.setText("Kentucky Avenue");
        PanelCasilla.add(jButton22, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 0, 100, 100));

        jButton23.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton23.setText("Chance");
        PanelCasilla.add(jButton23, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 0, 100, 100));

        jButton24.setBackground(new java.awt.Color(255, 153, 153));
        jButton24.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton24.setText("Indiana Avenue");
        PanelCasilla.add(jButton24, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 0, 100, 100));

        jButton25.setBackground(new java.awt.Color(255, 153, 153));
        jButton25.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton25.setText("Ilinois Avenue");
        PanelCasilla.add(jButton25, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 100, 100));

        jButton26.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton26.setText("B.& O Railroad");
        PanelCasilla.add(jButton26, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, 100, 100));

        jButton27.setBackground(new java.awt.Color(255, 255, 204));
        jButton27.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton27.setText("Atlantic Avenue");
        PanelCasilla.add(jButton27, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 0, 100, 100));

        jButton28.setBackground(new java.awt.Color(255, 255, 204));
        jButton28.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton28.setText("Vertnor Avenue");
        PanelCasilla.add(jButton28, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 0, 100, 100));

        jButton29.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton29.setText("Water Works");
        PanelCasilla.add(jButton29, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 0, 100, 100));

        jButton30.setBackground(new java.awt.Color(255, 255, 204));
        jButton30.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton30.setText("Marvin Avenue");
        PanelCasilla.add(jButton30, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 0, 100, 100));

        jButton31.setBackground(new java.awt.Color(155, 232, 155));
        jButton31.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jButton31.setText("Go To Jair");
        PanelCasilla.add(jButton31, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 0, 120, 100));

        jButton32.setBackground(new java.awt.Color(130, 178, 149));
        jButton32.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton32.setText("Pacific Avenue");
        PanelCasilla.add(jButton32, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 100, 120, 60));

        jButton33.setBackground(new java.awt.Color(130, 178, 149));
        jButton33.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton33.setText("North Carolina Avenue");
        PanelCasilla.add(jButton33, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 160, 120, 60));

        jButton34.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton34.setText("Community Chest");
        PanelCasilla.add(jButton34, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 220, 120, 60));

        jButton35.setBackground(new java.awt.Color(130, 178, 149));
        jButton35.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton35.setText("Pennsylvania Avenue");
        PanelCasilla.add(jButton35, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 280, 120, 60));

        jButton36.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton36.setText("Short line");
        jButton36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton36ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton36, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 340, 120, 60));

        jButton37.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton37.setText("Chance");
        PanelCasilla.add(jButton37, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 400, 120, 60));

        jButton38.setBackground(new java.awt.Color(155, 179, 207));
        jButton38.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton38.setText("Park Place");
        jButton38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton38ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton38, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 460, 120, 60));

        jButton39.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton39.setText("Luxury Tax");
        jButton39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton39ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton39, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 520, 120, 60));

        jButton40.setBackground(new java.awt.Color(155, 179, 207));
        jButton40.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jButton40.setText("Boardwalk");
        jButton40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton40ActionPerformed(evt);
            }
        });
        PanelCasilla.add(jButton40, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 580, 120, 60));

        Dado.setBackground(new java.awt.Color(159, 215, 159));
        Dado.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        Dado.setText("Lanzar Dado");
        Dado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DadoActionPerformed(evt);
            }
        });

        RegistroJuego.setColumns(20);
        RegistroJuego.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RegistroJuego.setRows(5);
        jScrollPane1.setViewportView(RegistroJuego);

        cmdSAlir.setBackground(new java.awt.Color(159, 215, 159));
        cmdSAlir.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmdSAlir.setText("Salir");
        cmdSAlir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSAlirActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Bienvenid@s al juego de Monopoly !! ");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Tabla de registros:");

        javax.swing.GroupLayout PanelTableroLayout = new javax.swing.GroupLayout(PanelTablero);
        PanelTablero.setLayout(PanelTableroLayout);
        PanelTableroLayout.setHorizontalGroup(
            PanelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTableroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelCasilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(PanelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTableroLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(PanelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)))
                    .addGroup(PanelTableroLayout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(PanelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(PanelTableroLayout.createSequentialGroup()
                                .addComponent(Dado, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(cmdSAlir, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        PanelTableroLayout.setVerticalGroup(
            PanelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTableroLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .addGroup(PanelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTableroLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 562, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(PanelTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Dado, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                            .addComponent(cmdSAlir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelTableroLayout.createSequentialGroup()
                        .addComponent(PanelCasilla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelTablero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelTablero, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton21ActionPerformed

    private void DadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DadoActionPerformed
        lanzarDado();
    }//GEN-LAST:event_DadoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton36ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton36ActionPerformed

    private void jButton38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton38ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton38ActionPerformed

    private void jButton39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton39ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton39ActionPerformed

    private void jButton40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton40ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton40ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void cmdSAlirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSAlirActionPerformed
        System.exit(0);      
    }//GEN-LAST:event_cmdSAlirActionPerformed

    private int solicitarNumeroJugadores() {
        String seleccionNumeroJugadores = (String) JOptionPane.showInputDialog(
                null, "Selecciona el número de jugadores:",
                "Número de Jugadores", JOptionPane.PLAIN_MESSAGE, null,
                new String[]{"2", "3", "4", "5", "6"}, "2");

        return Integer.parseInt(seleccionNumeroJugadores);
    }

    private void inicializarJugadores(int numeroDeJugadores) {
        // Crear una lista de colores disponibles
        Color[] coloresDisponibles = {Color.RED, Color.BLUE, Color.GREEN, Color.YELLOW, Color.ORANGE, Color.MAGENTA};

        // Permitir a cada jugador elegir su nombre y color
        for (int i = 1; i <= numeroDeJugadores; i++) {
            String nombreJugador = JOptionPane.showInputDialog("Nombre del Jugador " + i + ":");
            if (nombreJugador == null || nombreJugador.trim().isEmpty()) {
                nombreJugador = "Jugador " + i;
            }

            // Permitir al usuario seleccionar un color
            String[] opcionesColores = {"Rojo", "Azul", "Verde", "Amarillo", "Naranja", "Rosado"};
            String seleccionColor = (String) JOptionPane.showInputDialog(null, "Selecciona el color para " + nombreJugador + ":",
                    "Color del Jugador " + i, JOptionPane.PLAIN_MESSAGE, null, opcionesColores, opcionesColores[i - 1]);

            // Asignar el color seleccionado al jugador
            Color colorJugador = coloresDisponibles[i - 1];
            switch (seleccionColor) {
                case "Rojo":
                    colorJugador = Color.RED;
                    break;
                case "Azul":
                    colorJugador = Color.BLUE;
                    break;
                case "Verde":
                    colorJugador = Color.GREEN;
                    break;
                case "Amarillo":
                    colorJugador = Color.YELLOW;
                    break;
                case "Naranja":
                    colorJugador = Color.ORANGE;
                    break;
                case "Rosado":
                    colorJugador = Color.MAGENTA;
                    break;
            }

            Jugador jugador = new Jugador(nombreJugador, 1500, colorJugador);
            jugadores.add(jugador);
            colocarFichaEnCasilla(jugador, 0);
        }
    }

    private void lanzarDado() {
        int dado1 = (int) (Math.random() * 6) + 1;
        int dado2 = (int) (Math.random() * 6) + 1;
        int total = dado1 + dado2;
        Jugador jugadorActual = jugadores.get(indiceJugadorActual);

        if (jugadorActual.isEnCarcel()) {
            if (dado1 == dado2) {
                jugadorActual.setEnCarcel(false);
                actualizarRegistroJuego(jugadorActual.getNombre() + " ha sacado dobles y sale de la cárcel.");
            } else {
                jugadorActual.incrementarTurnoEnCarcel();
                actualizarRegistroJuego(jugadorActual.getNombre() + " está en la cárcel y ha sacado " + total + ".");
                if (jugadorActual.getTurnosEnCarcel() >= 3) {
                    jugadorActual.pagarFianza();
                    actualizarRegistroJuego(jugadorActual.getNombre() + " ha pagado fianza y sale de la cárcel.");
                }
            }
        } else {
            moverFicha(jugadorActual, total);
            verificarPosicion(jugadorActual);
        }

        // Terminar turno automáticamente después de lanzar el dado
        terminarTurno();
    }

    private void moverFicha(Jugador jugador, int espacios) {
        int posicionAnterior = jugador.getPosicion();
        jugador.mover(espacios, tablero);
        int nuevaPosicion = jugador.getPosicion();
        actualizarRegistroJuego(jugador.getNombre() + " se movió de la posición " + posicionAnterior + " a la posición " + nuevaPosicion);
        colocarFichaEnCasilla(jugador, nuevaPosicion);
        removerFichaDeCasilla(jugador, posicionAnterior);
        actualizarRegistroJuego(jugador.getNombre() + " tiene ahora $" + jugador.getDinero());
        if (posicionAnterior > nuevaPosicion) {
            // El jugador ha pasado por la casilla de salida
            jugador.incrementarDinero(200);
            actualizarRegistroJuego(jugador.getNombre() + " ha pasado por la casilla de salida y ha recibido $200.");
        }
    }

    private void colocarFichaEnCasilla(Jugador jugador, int posicion) {
       Component[] components = PanelCasilla.getComponents();
    JButton targetButton = (JButton) components[posicion];
    JPanel ficha = jugador.getFicha();
    
    // Establecer un tamaño personalizado para el panel de la ficha
    ficha.setPreferredSize(new Dimension(5, 5)); // Ajusta el tamaño según tus preferencias

    // Agregar el panel de la ficha al botón
    targetButton.add(ficha);
    
    // Revalidar y repintar el botón para actualizar la apariencia
    targetButton.revalidate();
    targetButton.repaint();
}

    private void removerFichaDeCasilla(Jugador jugador, int posicion) {
        Component[] components = PanelCasilla.getComponents(); // Get all components in the panel
        JButton sourceButton = (JButton) components[posicion]; // Get the button at the specified position
        sourceButton.remove(jugador.getFicha()); // Remove the game piece from the button
        sourceButton.revalidate(); // Revalidate the button to update its layout
        sourceButton.repaint();
    }

    private Point obtenerCoordenadas(int posicion) {
        if (posicion >= 0 && posicion < 40) {
            if (posicion < 11) {
                return new Point(0, posicion);
            } else if (posicion < 21) {
                return new Point(posicion - 10, 10);
            } else if (posicion < 31) {
                return new Point(10, 30 - posicion);
            } else {
                return new Point(40 - posicion, 0);
            }
        }
        return null;
    }

    private void verificarPosicion(Jugador jugador) {
        EspacioTablero espacio = tablero.getEspacio(jugador.getPosicion());
        if (espacio instanceof Propiedad) {
            Propiedad propiedad = (Propiedad) espacio;
            if (propiedad.getPropietario() == null) {
                int opcion = JOptionPane.showConfirmDialog(this, jugador.getNombre() + ", ¿quieres comprar " + propiedad.getNombre() + " por $" + propiedad.getCosto() + "?", "Comprar Propiedad", JOptionPane.YES_NO_OPTION);
                if (opcion == JOptionPane.YES_OPTION) {
                    jugador.comprarPropiedad(propiedad);
                    actualizarRegistroJuego(jugador.getNombre() + " compró " + propiedad.getNombre());
                }
            } else if (propiedad.getPropietario() != jugador) {
                jugador.pagarAlquiler(propiedad);
                actualizarRegistroJuego(jugador.getNombre() + " pagó alquiler a " + propiedad.getPropietario().getNombre() + " por " + propiedad.getNombre());
            }
        } else if (espacio instanceof Carcel) {
            enviarJugadorACarcel(jugador);
            actualizarRegistroJuego(jugador.getNombre() + " ha sido enviado a la cárcel.");
        } else if (espacio instanceof Impuesto) {
            Impuesto impuesto = (Impuesto) espacio;
            jugador.pagarAlquiler(new Propiedad("Impuesto", impuesto.getMonto(), 0)); // Simulación de pago de impuesto
            actualizarRegistroJuego(jugador.getNombre() + " ha pagado $" + impuesto.getMonto() + " de impuestos.");
        } else if (espacio instanceof Chance) {
            Chance chance = (Chance) espacio;
            String evento = chance.obtenerEventoAleatorio();
            // Lógica para manejar el evento de Chance
            actualizarRegistroJuego("Evento de Chance: " + evento);
        } else if (espacio instanceof CommunityChest) {
            CommunityChest communityChest = (CommunityChest) espacio;
            // Obtener un evento aleatorio de Community Chest
            String evento = communityChest.obtenerEventoAleatorio();
            // Realizar la acción correspondiente al evento en el juego
            actualizarRegistroJuego("Evento de Community Chest: " + evento);
            // Aquí puedes implementar la lógica para cada tipo de evento
        } else if (espacio instanceof EstacionTren) {
            EstacionTren estacion = (EstacionTren) espacio;
        }
        if (espacio instanceof ServicioPublico) {
            ServicioPublico servicioPublico = (ServicioPublico) espacio;
            if (servicioPublico.getPropietario() == null) {
                int opcion = JOptionPane.showConfirmDialog(this, jugador.getNombre() + ", ¿quieres comprar " + servicioPublico.getNombre() + " por $" + servicioPublico.getCosto() + "?", "Comprar Propiedad", JOptionPane.YES_NO_OPTION);
                if (opcion == JOptionPane.YES_OPTION) {
                    jugador.comprarPropiedad(servicioPublico);
                    actualizarRegistroJuego(jugador.getNombre() + " compró " + servicioPublico.getNombre());
                }
            } else if (servicioPublico.getPropietario() != jugador) {
                jugador.pagarAlquiler(servicioPublico);
                actualizarRegistroJuego(jugador.getNombre() + " pagó alquiler a " + servicioPublico.getPropietario().getNombre() + " por " + servicioPublico.getNombre());
            }
            if (jugador.getDinero() < 0) {
                JOptionPane.showMessageDialog(this, jugador.getNombre() + " ha perdido el juego porque se ha quedado sin dinero.");

            }

        }
    }

    private void enviarJugadorACarcel(Jugador jugador) {
        int posicionAnterior = jugador.getPosicion();
        int posicionCarcel = 10; // Supongamos que la cárcel está en la posición 10
        jugador.setPosicion(posicionCarcel);
        jugador.setEnCarcel(true);
        colocarFichaEnCasilla(jugador, posicionCarcel);
        removerFichaDeCasilla(jugador, posicionAnterior);
    }

    private void terminarTurno() {
        indiceJugadorActual = (indiceJugadorActual + 1) % jugadores.size();
        actualizarRegistroJuego("\n"+ "Es el turno de " + jugadores.get(indiceJugadorActual).getNombre() + ".");
    }

    private void actualizarRegistroJuego(String mensaje) {
        RegistroJuego.append(mensaje + "\n");
    }

    private int calcularIndex(int i, int j) {
        if (i == 0) {
            return j;
        } else if (i == 10) {
            return 30 + (10 - j);
        } else if (j == 0) {
            return 30 - i;
        } else if (j == 10) {
            return 10 + i;
        }
        return -1;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Monopoly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Monopoly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Monopoly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Monopoly.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Monopoly().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Dado;
    private javax.swing.JPanel PanelCasilla;
    private javax.swing.JPanel PanelTablero;
    private javax.swing.JTextArea RegistroJuego;
    private javax.swing.JButton cmdSAlir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton32;
    private javax.swing.JButton jButton33;
    private javax.swing.JButton jButton34;
    private javax.swing.JButton jButton35;
    private javax.swing.JButton jButton36;
    private javax.swing.JButton jButton37;
    private javax.swing.JButton jButton38;
    private javax.swing.JButton jButton39;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton40;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
